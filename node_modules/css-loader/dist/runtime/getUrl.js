"use strict";

module.exports = function (url, options) {
  if (!options) {
<<<<<<< HEAD
    options = {};
  }

  if (!url) {
    return url;
  }

  url = String(url.__esModule ? url.default : url); // If url is already wrapped in quotes, remove them

  if (/^['"].*['"]$/.test(url)) {
=======
    // eslint-disable-next-line no-param-reassign
    options = {};
  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign


  url = url && url.__esModule ? url.default : url;

  if (typeof url !== "string") {
    return url;
  } // If url is already wrapped in quotes, remove them


  if (/^['"].*['"]$/.test(url)) {
    // eslint-disable-next-line no-param-reassign
>>>>>>> 59200b616be23b58448c0052ee601131639d6e3f
    url = url.slice(1, -1);
  }

  if (options.hash) {
<<<<<<< HEAD
=======
    // eslint-disable-next-line no-param-reassign
>>>>>>> 59200b616be23b58448c0052ee601131639d6e3f
    url += options.hash;
  } // Should url be wrapped?
  // See https://drafts.csswg.org/css-values-3/#urls


<<<<<<< HEAD
  if (/["'() \t\n]|(%20)/.test(url) || options.needQuotes) {
=======
  if (/["'() \t\n]/.test(url) || options.needQuotes) {
>>>>>>> 59200b616be23b58448c0052ee601131639d6e3f
    return "\"".concat(url.replace(/"/g, '\\"').replace(/\n/g, "\\n"), "\"");
  }

  return url;
};